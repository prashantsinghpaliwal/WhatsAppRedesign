<resources>

    <declare-styleable name="BezelImageView">
        <attr name="maskDrawable" format="reference" />
        <attr name="borderDrawable" format="reference" />
        <attr name="desaturateOnPress" format="boolean" />
    </declare-styleable>

    <!-- CircularImageView Custom Styling -->
    <declare-styleable name="CircularImageView">
        <attr name="civ_border" format="boolean" />
        <attr name="civ_borderColor" format="color" />
        <attr name="civ_borderWidth" format="dimension" />
        <attr name="civ_selector" format="boolean" />
        <attr name="civ_selectorColor" format="color" />
        <attr name="civ_selectorStrokeColor" format="color" />
        <attr name="civ_selectorStrokeWidth" format="dimension" />
        <attr name="civ_shadow" format="boolean" />
        <attr name="civ_shadowRadius" format="float" />
        <attr name="civ_shadowDx" format="float" />
        <attr name="civ_shadowDy" format="float" />
        <attr name="civ_shadowColor" format="color" />
        <attr name="civ_border_width" format="dimension" />
        <attr name="civ_border_color" format="color" />
        <attr name="civ_shadow_color" format="color" />
        <attr name="civ_shadow_radius" format="float" />
    </declare-styleable>

    <declare-styleable name="CircularImageViewStyle">
        <attr name="circularImageViewDefault" format="reference" />
    </declare-styleable>


    <!-- Start Circle Indicator -->
    <declare-styleable name="CircleIndicator">
        <attr name="ci_width" format="dimension" />
        <attr name="ci_height" format="dimension" />
        <attr name="ci_margin" format="dimension" />
        <attr name="ci_animator" format="reference" />
        <attr name="ci_animator_reverse" format="reference" />
        <attr name="ci_drawable" format="reference" />
        <attr name="ci_drawable_unselected" format="reference" />

        <attr name="ci_orientation" format="enum">
            <!-- Defines an horizontal widget. -->
            <enum name="horizontal" value="0" />
            <!-- Defines a vertical widget. -->
            <enum name="vertical" value="1" />
        </attr>

        <attr name="ci_gravity">
            <!-- Push object to the top of its container, not changing its size. -->
            <flag name="top" value="0x30" />
            <!-- Push object to the bottom of its container, not changing its size. -->
            <flag name="bottom" value="0x50" />
            <!-- Push object to the left of its container, not changing its size. -->
            <flag name="left" value="0x03" />
            <!-- Push object to the right of its container, not changing its size. -->
            <flag name="right" value="0x05" />
            <!-- Place object in the vertical center of its container, not changing its size. -->
            <flag name="center_vertical" value="0x10" />
            <!-- Grow the vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill_vertical" value="0x70" />
            <!-- Place object in the horizontal center of its container, not changing its size. -->
            <flag name="center_horizontal" value="0x01" />
            <!-- Grow the horizontal size of the object if needed so it completely fills its container. -->
            <flag name="fill_horizontal" value="0x07" />
            <!-- Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. -->
            <flag name="center" value="0x11" />
            <!-- Grow the horizontal and vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill" value="0x77" />
            <!-- Additional option that can be set to have the top and/or bottom edges of
            the child clipped to its container's bounds.
            The clip will be based on the vertical gravity: a top gravity will clip the bottom
            edge, a bottom gravity will clip the top edge, and neither will clip both edges. -->
            <flag name="clip_vertical" value="0x80" />
            <!-- Additional option that can be set to have the left and/or right edges of
            the child clipped to its container's bounds.
            The clip will be based on the horizontal gravity: a left gravity will clip the right
            edge, a right gravity will clip the left edge, and neither will clip both edges. -->
            <flag name="clip_horizontal" value="0x08" />
            <!-- Push object to the beginning of its container, not changing its size. -->
            <flag name="start" value="0x00800003" />
            <!-- Push object to the end of its container, not changing its size. -->
            <flag name="end" value="0x00800005" />
        </attr>

    </declare-styleable>

    <!-- End Circle Indicator -->

    <declare-styleable name="StoriesProgressView">
        <attr name="progressCount" format="integer|reference" />
    </declare-styleable>

    <!-- Start Story Circular Indicator -->
    <declare-styleable name="StoryView">
        <attr name="storyImageRadius" format="dimension" />
        <attr name="storyItemIndicatorWidth" format="dimension" />
        <attr name="spaceBetweenImageAndIndicator" format="dimension" />
        <attr name="pendingIndicatorColor" format="color" />
        <attr name="visitedIndicatorColor" format="color" />
    </declare-styleable>
    <declare-styleable name="StoryPlayerProgressView">
        <attr name="progressBarHeight" format="dimension" />
        <attr name="gapBetweenProgressBar" format="dimension" />
        <attr name="progressBarPrimaryColor" format="color" />
        <attr name="progressBarSecondaryColor" format="color" />
        <attr name="singleStoryDisplayTime" format="integer" />
    </declare-styleable>
    <!-- End Story Circular Indicator -->
</resources>
